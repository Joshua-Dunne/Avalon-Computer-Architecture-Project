000010D2 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 25/02/2019 15:51:02

00001000                             1          org $1000
00001000                             2  
00001000                             3  *-------------------------------------------------------
00001000                             4  * Name: Joshua Dunne
00001000                             5  * C00241588
00001000                             6  * Date(s): 11/02/19
00001000                             7  * Estimated Time Taken: 20 Hours
00001000                             8  * Actual Time Taken: ~4 Hour(s)
00001000                             9  * Known Bugs:
00001000                            10  *------------------------------------------------------
00001000                            11  
00001000                            12  *-------------------------------------------------------
00001000                            13  *Choose to be a Worker or a God 
00001000                            14  *https://www.avalon-rpg.com/
00001000                            15  *-------------------------------------------------------
00001000                            16  
00001000                            17  *-------------------------------------------------------
00001000                            18  *Validation values to be used, modify as needed
00001000                            19  *Add additional validation values as required
00001000                            20  *-------------------------------------------------------
00001000  =00000000                 21  exit        EQU 0      used to exit assembly program
00001000  =00000001                 22  min_potions EQU 1      min number of potions
00001000  =00000014                 23  max_potions EQU 20     max number of potions
00001000  =00000001                 24  min_weapons EQU 1      min weapons
00001000  =0000000F                 25  max_weapons EQU 15      max weapons
00001000  =00000005                 26  win_point   EQU 5      points accumilated on win
00001000  =00000008                 27  lose_point  EQU 8      points deducted on a loss
00001000  =000000FF                 28  RED     EQU             $000000FF
00001000  =00FFFF00                 29  CYAN    EQU             $00FFFF00
00001000  =00FFFFFF                 30  WHITE   EQU             $00FFFFFF
00001000  =01090000                 31  FONT    EQU             $01090000
00001000                            32  health:     ds.w    100 Player's health
000010C8                            33  score:      ds.w    1 reserve space for score
000010CA= 1388                      34  gold:       dc.w    5000 gold player has (starts at 5000)
000010CC= 0000                      35  potion_count:    dc.w    0 potions player has (starts at 0)
000010CE= 0005                      36  weapon_count:    dc.w    5 number of weapons player has (starts at 5)
000010D0= 0000                      37  feed:       dc.w    0 amount of food for horse (starts at 0)
000010D2                            38  
000010D2                            39  
000010D2  =00000064                 40  mine_loc    EQU 100    A location where a mine is found
000010D2                            41  
000010D2                            42  
000010D2                            43  *Start of Game
000010D2                            44  start:
000010D2                            45  
000010D2  49F8 10CA                 46      LEA gold,A4
000010D6  4BF8 10CC                 47      LEA potion_count,A5
000010DA  4DF8 10CE                 48      LEA weapon_count,A6
000010DE                            49  
000010DE  6100 1F2A                 50      bsr     welcome    branch to the welcome subroutine
000010E2  6100 1FA4                 51      bsr     input      branch to the input subroutine
000010E6  6100 1F18                 52      bsr     game       branch to the game subroutine
000010EA                            53  *Game loop
00003000                            54      org     $3000      the rest of the program is to be located from 3000 onwards
00003000                            55  
00003000                            56  *-------------------------------------------------------
00003000                            57  *-------------------Game Subroutine---------------------
00003000                            58  *-------------------------------------------------------
00003000                            59  game:
00003000  6100 0090                 60      bsr     gameloop   branch to gameloop subroutine
00003004  4E75                      61      rts                return from game: subroutine
00003006                            62            
00003006                            63  end:
00003006  FFFF FFFF                 64      simhalt
0000300A                            65  
0000300A                            66  *-------------------------------------------------------
0000300A                            67  *-------------------Welcome Subroutine------------------
0000300A                            68  *-------------------------------------------------------
0000300A                            69  welcome:
0000300A  6100 0366                 70      bsr     endl            branch to endl subroutine
0000300E                            71      
0000300E  223C 000000FF             72      move.l #RED,D1
00003014  243C 01090000             73      move.l #FONT,D2
0000301A  103C 0015                 74      move.b  #21,D0
0000301E  4E4F                      75      trap    #15
00003020                            76      
00003020  4241                      77      clr     D1
00003022                            78      
00003022  43F9 0000338B             79      lea     welcome_msg,A1  assign message to address register A1
00003028  103C 000E                 80      move.b  #14,D0          move literal 14 to DO
0000302C  4E4F                      81      trap    #15             trap and interpret value in D0
0000302E                            82      
0000302E  223C 00FFFF00             83      move.l #CYAN,D1
00003034  243C 01090000             84      move.l #FONT,D2
0000303A  103C 0015                 85      move.b  #21,D0
0000303E  4E4F                      86      trap    #15
00003040                            87  
00003040  4241                      88      clr     D1
00003042                            89      
00003042  103C 0004                 90      move.b  #4,D0           move literal 3 to D0
00003046  4E4F                      91      trap    #15             trap and interpret value in D0 (get input from user)
00003048  B27C 0000                 92      cmp     #exit,D1
0000304C  67B8                      93      beq     end         if SR Z register contains 1 beq => Branch Equals
0000304E  6100 0322                 94      bsr     endl            branch to endl subroutine
00003052                            95      
00003052  103C 000B                 96      move.b  #11,d0      clear screen
00003056  323C FF00                 97      move.w  #$ff00,d1
0000305A  4E4F                      98      trap    #15  
0000305C                            99    
0000305C                           100      
0000305C  223C 00FFFFFF            101      move.l #WHITE,D1
00003062  243C 01090000            102      move.l #FONT,D2
00003068  103C 0015                103      move.b  #21,D0
0000306C  4E4F                     104      trap    #15
0000306E                           105      
0000306E  4241                     106      clr     D1
00003070                           107      
00003070  43F9 00003445            108      lea     intro_msg,A1
00003076  103C 000E                109      move.b  #14,D0
0000307A  4E4F                     110      trap    #15
0000307C                           111      
0000307C  223C 00000258            112      move.l   #600,D1     delay in 1/100th of seconds (2 seconds)
00003082  7017                     113      moveq    #23,D0      23 -> Wait 1/100th of a second of the value in D1 
00003084  4E4F                     114      trap     #15         trap and interpret value in D0
00003086                           115      
00003086  4E75                     116      rts                     return from welcome: subroutine
00003088                           117  
00003088                           118  *-------------------------------------------------------
00003088                           119  *---------Gameplay Input Values Subroutine--------------
00003088                           120  *-------------------------------------------------------    
00003088                           121  input:
00003088  6100 0066                122      bsr     potions         branch to potion input subroutine
0000308C  6100 014E                123      bsr     weapons        branch to weaponss input subroutine
00003090  4E75                     124      rts
00003092                           125  
00003092                           126  *-------------------------------------------------------
00003092                           127  *----------------Gameloop (main loop)-------------------
00003092                           128  *------------------------------------------------------- 
00003092                           129  gameloop:
00003092  6100 0028                130      bsr     update          branch to update game subroutine 
00003096  6100 02AC                131      bsr     clear_screen    clears the screen         
0000309A  6100 003A                132      bsr     draw            branch to draw screen subroutine
0000309E  6100 02A4                133      bsr     clear_screen    clears the screen
000030A2  6100 0206                134      bsr     gameplay        branch to gameplay subroutine
000030A6  6100 029C                135      bsr     clear_screen    clears the screen
000030AA  6100 021C                136      bsr     hud             branch to display HUD subroutine
000030AE  6100 0294                137      bsr     clear_screen    clears the screen
000030B2  6100 029C                138      bsr     replay          branch to replay game subroutine
000030B6  6100 028C                139      bsr     clear_screen    clears the screen
000030BA  4E75                     140      rts                     return from gameloop: subroutine
000030BC                           141  
000030BC                           142  *-------------------------------------------------------
000030BC                           143  *----------------Update Quest Progress------------------
000030BC                           144  *  Complete Quest
000030BC                           145  *------------------------------------------------------- 
000030BC                           146  update:
000030BC  6100 02B4                147      bsr     endl            print a CR and LF
000030C0  6100 0264                148      bsr     decorate        decorate with dots using a loop
000030C4  43F9 000037F6            149      lea     update_msg,A1   
000030CA  103C 000E                150      move.b  #14,D0
000030CE  4E4F                     151      trap    #15
000030D0  6100 0254                152      bsr     decorate
000030D4  4E75                     153      rts
000030D6                           154  *-------------------------------------------------------
000030D6                           155  *-----------------Draw Quest Updates--------------------
000030D6                           156  * Draw the game progress information, status regarding
000030D6                           157  * quest
000030D6                           158  *------------------------------------------------------- 
000030D6                           159  draw:
000030D6  6100 029A                160      bsr     endl
000030DA  6100 024A                161      bsr     decorate
000030DE  43F9 00003808            162      lea     draw_msg,A1
000030E4  103C 000E                163      move.b  #14,D0
000030E8  4E4F                     164      trap    #15
000030EA  6100 023A                165      bsr     decorate
000030EE  4E75                     166      rts
000030F0                           167  *-------------------------------------------------------
000030F0                           168  *------------------------Potions------------------------
000030F0                           169  * Input the ingredients for each potion. Ingredients costs 
000030F0                           170  * money. For an advanced mark you need to manage this 
000030F0                           171  * resource
000030F0                           172  *------------------------------------------------------- 
000030F0                           173  potions:
000030F0  6100 0280                174      bsr     endl
000030F4  6100 0230                175      bsr     decorate
000030F8  43F9 000036C8            176      lea     gold_msg,A1
000030FE  103C 000E                177      move.b  #14,D0
00003102  4E4F                     178      trap    #15 display message saying how much gold user has
00003104                           179      
00003104  3214                     180      move.w  (A4),D1
00003106  103C 0003                181      move.b  #3,D0
0000310A  4E4F                     182      trap    #15 display the number of gold
0000310C                           183      
0000310C  43F9 0000385D            184      lea     empty_msg,A1
00003112  103C 000E                185      move.b  #14,D0
00003116  4E4F                     186      trap    #15 put in a line break
00003118                           187      
00003118  43F9 0000357E            188      lea     potions_msg,A1
0000311E  103C 000E                189      move.b  #14,D0
00003122  4E4F                     190      trap    #15 display potion message
00003124                           191      
00003124  103C 0004                192      move.b  #4,D0
00003128  4E4F                     193      trap    #15 get input on how many potions user wants
0000312A                           194      
0000312A  B27C 0001                195      cmp     #min_potions,D1
0000312E  6D00 0072                196      blt     potion_error_min compare less than minimum amount of potions allowed, branch if less
00003132                           197      
00003132  B27C 0014                198      cmp     #max_potions,D1
00003136  6E00 005A                199      bgt     potion_error_max compare more than minimum amount of potions allowed, branch if more
0000313A                           200      
0000313A  4242                     201      clr     D2 clear d2 in case anything else has used it
0000313C                           202      
0000313C  1401                     203      move.b  D1, D2 move the number of potions entered into data register 2
0000313E  C4FC 0064                204      mulu.w  #100, D2    multiply that number by 100 (to get the cost)
00003142                           205      
00003142  3614                     206      move.w (A4),D3 temporarily move the amount of money they have into a data register
00003144                           207      
00003144  B443                     208      cmp.w   D3,D2 compare the cost against the potions the user has
00003146                           209      
00003146  6E00 006A                210      bgt potion_error_money if they dont have enough, tell them
0000314A                           211      
0000314A  1A81                     212      move.b  D1, (A5) otherwise move the amount of potions they bought into number A5
0000314C                           213      
0000314C  9554                     214      sub.w   D2,(A4) take away the cost
0000314E                           215      
0000314E  43F9 000036C8            216      lea     gold_msg,A1
00003154  103C 000E                217      move.b  #14,D0
00003158  4E4F                     218      trap    #15 display message saying how much gold user has
0000315A                           219      
0000315A  3214                     220      move.w  (A4),D1
0000315C  103C 0003                221      move.b  #3,D0
00003160  4E4F                     222      trap    #15 display the number of gold
00003162                           223      
00003162  43F9 0000385D            224      lea     empty_msg,A1
00003168  103C 000E                225      move.b  #14,D0
0000316C  4E4F                     226      trap    #15 put in a line break
0000316E                           227      
0000316E  223C 000004B0            228      move.l   #1200,D1     delay in 1/100th of seconds (2 seconds)
00003174  7017                     229      moveq    #23,D0      23 -> Wait 1/100th of a second of the value in D1 
00003176  4E4F                     230      trap     #15         trap and interpret value in D0
00003178                           231      
00003178  103C 000B                232      move.b  #11,d0      clear screen
0000317C  323C FF00                233      move.w  #$ff00,d1
00003180  4E4F                     234      trap    #15 
00003182                           235      
00003182  223C 0000012C            236      move.l   #300,D1     delay in 1/100th of seconds (2 seconds)
00003188  7017                     237      moveq    #23,D0      23 -> Wait 1/100th of a second of the value in D1 
0000318A  4E4F                     238      trap     #15         trap and interpret value in D0
0000318C                           239  
0000318C  6100 0198                240      bsr     decorate
00003190  4E75                     241      rts
00003192                           242      
00003192                           243  potion_error_max:
00003192  43F9 000035FF            244      lea     potions_error_max,A1
00003198  103C 000E                245      move.b  #14,D0
0000319C  4E4F                     246      trap    #15
0000319E  6000 FF50                247      bra     potions
000031A2                           248  
000031A2                           249  potion_error_min:
000031A2  43F9 0000364F            250      lea     potions_error_min,A1
000031A8  103C 000E                251      move.b  #14,D0
000031AC  4E4F                     252      trap    #15
000031AE  6000 FF40                253      bra     potions
000031B2                           254      
000031B2                           255  potion_error_money:
000031B2  43F9 0000367E            256      lea     error_money,A1
000031B8  103C 000E                257      move.b  #14,D0
000031BC  4E4F                     258      trap    #15
000031BE  6000 FF30                259      bra     potions
000031C2                           260      
000031C2                           261  
000031C2                           262  *-------------------------------------------------------
000031C2                           263  *--------------------Potions Inventory------------------
000031C2                           264  * Number of potions to be used in a Quest 
000031C2                           265  *------------------------------------------------------- 
000031C2                           266  potionsremain:
000031C2  6100 01AE                267      bsr     endl
000031C6  6100 015E                268      bsr     decorate
000031CA  43F9 0000369E            269      lea     potion_msg,A1
000031D0  103C 000E                270      move.b  #14,D0
000031D4  4E4F                     271      trap    #15
000031D6  6100 014E                272      bsr     decorate
000031DA  4E75                     273      rts
000031DC                           274  
000031DC                           275  *-------------------------------------------------------
000031DC                           276  *-------------------------Weapons-----------------------
000031DC                           277  * Number of weapons
000031DC                           278  *-------------------------------------------------------   
000031DC                           279  weapons:
000031DC  6100 0194                280      bsr     endl
000031E0  6100 0144                281      bsr     decorate
000031E4                           282      
000031E4  43F9 000036C8            283      lea     gold_msg,A1
000031EA  103C 000E                284      move.b  #14,D0
000031EE  4E4F                     285      trap    #15 display message saying how much gold user has
000031F0                           286      
000031F0  3214                     287      move.w  (A4),D1
000031F2  103C 0003                288      move.b  #3,D0
000031F6  4E4F                     289      trap    #15 display the number of gold
000031F8                           290      
000031F8  43F9 0000385D            291      lea     empty_msg,A1
000031FE  103C 000E                292      move.b  #14,D0
00003202  4E4F                     293      trap    #15 put in a line break
00003204                           294      
00003204  43F9 000036D9            295      lea     weapons_msg,A1
0000320A  103C 000E                296      move.b  #14,D0
0000320E  4E4F                     297      trap    #15 display weapon shop message
00003210                           298      
00003210  103C 0004                299      move.b  #4,D0
00003214  4E4F                     300      trap    #15 get input on how many weapons user wants
00003216                           301      
00003216  B27C 0001                302      cmp     #min_weapons,D1
0000321A  6D00 006A                303      blt     weapon_error_min compare less than minimum amount of weapons allowed, branch if less
0000321E                           304      
0000321E  B27C 000F                305      cmp     #max_weapons,D1
00003222  6E00 0052                306      bgt     weapon_error_max compare more than maximum amount of weapons allowed, branch if more
00003226                           307      
00003226  4242                     308      clr     D2 clear d2 in case anything else has used it
00003228                           309      
00003228  1401                     310      move.b  D1, D2      move the number of weapons entered into data register 2
0000322A  C4FC 00FA                311      mulu.w  #250, D2    multiply that number by 250 (to get the cost)
0000322E                           312      
0000322E  3614                     313      move.w (A4),D3 temporarily move the amount of money they have into a data register
00003230                           314      
00003230  B443                     315      cmp.w   D3,D2 compare the cost against the money the user has
00003232  6E00 0062                316      bgt     weapon_error_money if they dont have enough, tell them
00003236                           317      
00003236  4243                     318      clr     D3 we dont need the number in the register anymore if it goes through
00003238                           319      
00003238  1C81                     320      move.b  D1, (A6) otherwise move the amount of weapons they bought into number A6 
0000323A                           321      
0000323A  9554                     322      sub.w   D2,(A4) take away the cost
0000323C                           323      
0000323C  43F9 000036C8            324      lea     gold_msg,A1
00003242  103C 000E                325      move.b  #14,D0
00003246  4E4F                     326      trap    #15 display message saying how much gold user has
00003248                           327      
00003248  3214                     328      move.w  (A4),D1
0000324A  103C 0003                329      move.b  #3,D0
0000324E  4E4F                     330      trap    #15 display the number of gold
00003250                           331      
00003250  43F9 0000385D            332      lea     empty_msg,A1
00003256  103C 000E                333      move.b  #14,D0
0000325A  4E4F                     334      trap    #15 put in a line break
0000325C                           335      
0000325C  223C 0000012C            336      move.l   #300,D1     delay in 1/100th of seconds (2 seconds)
00003262  7017                     337      moveq    #23,D0      23 -> Wait 1/100th of a second of the value in D1 
00003264  4E4F                     338      trap     #15         trap and interpret value in D0
00003266                           339   
00003266  103C 000B                340      move.b  #11,d0      clear screen
0000326A  323C FF00                341      move.w  #$ff00,d1
0000326E  4E4F                     342      trap    #15 
00003270                           343   
00003270  6100 00B4                344      bsr     decorate
00003274  4E75                     345      rts
00003276                           346      
00003276                           347  weapon_error_max:
00003276  43F9 00003781            348      lea     weapons_error_max,A1
0000327C  103C 000E                349      move.b  #14,D0
00003280  4E4F                     350      trap    #15
00003282  6000 FF58                351      bra     weapons
00003286                           352  
00003286                           353  weapon_error_min:
00003286  43F9 000037B8            354      lea     weapons_error_min,A1
0000328C  103C 000E                355      move.b  #14,D0
00003290  4E4F                     356      trap    #15
00003292  6000 FF48                357      bra     weapons
00003296                           358      
00003296                           359  weapon_error_money:
00003296  43F9 0000367E            360      lea     error_money,A1
0000329C  103C 000E                361      move.b  #14,D0
000032A0  4E4F                     362      trap    #15
000032A2  4243                     363      clr     D3 reset this number for use later
000032A4  4242                     364      clr     D2 reset this number for use later
000032A6  6000 FF34                365      bra     weapons
000032AA                           366  
000032AA                           367  *-------------------------------------------------------
000032AA                           368  *---Game Play (Quest Progress)--------------------------
000032AA                           369  *------------------------------------------------------- 
000032AA                           370  gameplay:
000032AA  6100 00C6                371      bsr     endl
000032AE  6100 0076                372      bsr     decorate
000032B2  43F9 000037E7            373      lea     gameplay_msg,A1
000032B8  103C 000E                374      move.b  #14,D0
000032BC  4E4F                     375      trap    #15
000032BE  6100 0066                376      bsr     decorate
000032C2  6100 0026                377      bsr     collision
000032C6  4E75                     378      rts
000032C8                           379  
000032C8                           380  *-------------------------------------------------------
000032C8                           381  *-----------------Heads Up Display (Score)--------------
000032C8                           382  * Retrieves the score from memory location
000032C8                           383  *-------------------------------------------------------   
000032C8                           384  hud:
000032C8                           385  
000032C8  6100 00A8                386      bsr     endl
000032CC  6100 0058                387      bsr     decorate
000032D0  43F9 00003854            388      lea     hud_msg,A1
000032D6  103C 000E                389      move.b  #14,D0
000032DA  4E4F                     390      trap    #15
000032DC  1213                     391      move.b  (A3),D1     retrieve the value A3 point to and move to D1
000032DE  103C 0003                392      move.b  #3,D0       move literal 3 to D0
000032E2  4E4F                     393      trap    #15         intrepret value in D0, which 3 which displays D1
000032E4  6100 0040                394      bsr     decorate
000032E8  4E75                     395      rts
000032EA                           396  
000032EA                           397  *-------------------------------------------------------
000032EA                           398  *-----------------------Being Attacked------------------
000032EA                           399  * This could be used for collision detection
000032EA                           400  *-------------------------------------------------------
000032EA                           401  collision:
000032EA  123C 0064                402      move.b  #mine_loc,D1
000032EE  B27C 0064                403      cmp     #100,D1 is( x == 100)?
000032F2  6600 0010                404      bne     collision_miss if x is not equal to 100, then not hit
000032F6                           405  collision_hit:
000032F6                           406      *hit
000032F6  43F9 00003816            407      lea     hit_msg,A1
000032FC  303C 000E                408      move    #14,D0
00003300  4E4F                     409      trap    #15
00003302  4E75                     410      rts
00003304                           411      
00003304                           412  collision_miss:
00003304                           413      *miss
00003304  43F9 0000381E            414      lea     miss_msg,A1
0000330A  303C 000E                415      move    #14,D0
0000330E  4E4F                     416      trap    #15
00003310  4E75                     417      rts
00003312                           418  
00003312                           419  *-------------------------------------------------------
00003312                           420  *--------------------------Loop-------------------------
00003312                           421  *-------------------------------------------------------
00003312                           422  loop:
00003312  163C 0005                423      move.b  #5, D3 loop counter D3=5
00003316                           424  next:
00003316  43F9 00003824            425      lea     loop_msg,A1
0000331C  103C 000E                426      move.b  #14,D0
00003320  4E4F                     427      trap    #15
00003322  5343                     428      sub     #1,D3   decrement loop counter
00003324  66F0                     429      bne     next    repeat until D0=0
00003326                           430  
00003326                           431  *-------------------------------------------------------
00003326                           432  *------------------Screen Decoration--------------------
00003326                           433  *-------------------------------------------------------
00003326                           434  decorate:
00003326  163C 003C                435      move.b  #60, D3
0000332A  6100 0046                436      bsr     endl
0000332E                           437  out:
0000332E  43F9 00003824            438      lea     loop_msg,A1
00003334  103C 000E                439      move.b  #14,D0
00003338  4E4F                     440      trap    #15
0000333A  5343                     441      sub     #1,D3   decrement loop counter
0000333C  66F0                     442      bne     out     repeat until D0=0
0000333E  6100 0032                443      bsr     endl
00003342  4E75                     444      rts
00003344                           445      
00003344                           446  clear_screen: 
00003344  103C 000B                447      move.b  #11,D0      clear screen
00003348  323C FF00                448      move.w  #$ff00,D1
0000334C  4E4F                     449      trap    #15
0000334E  4E75                     450      rts
00003350                           451  *-------------------------------------------------------
00003350                           452  *------------------------Replay-------------------------
00003350                           453  *-------------------------------------------------------
00003350                           454  replay:
00003350  6100 0020                455      bsr     endl
00003354  43F9 00003826            456      lea     replay_msg,A1
0000335A  103C 000E                457      move.b  #14,D0
0000335E  4E4F                     458      trap    #15
00003360                           459      
00003360  103C 0004                460      move.b  #4,D0
00003364  4E4F                     461      trap    #15
00003366                           462  
00003366  B27C 0000                463      cmp     #exit,D1
0000336A  6700 FC9A                464      beq     end         if SR Z register contains 1 beq => Branch Equals
0000336E  6100 FD22                465      bsr     gameloop
00003372                           466  
00003372                           467  endl:
00003372  48E7 8040                468      movem.l D0/A1,-(A7)
00003376  303C 000E                469      move    #14,D0
0000337A  43F9 00003388            470      lea     crlf,A1
00003380  4E4F                     471      trap    #15
00003382  4CDF 0201                472      movem.l (A7)+,D0/A1
00003386  4E75                     473      rts
00003388                           474      
00003388                           475  *-------------------------------------------------------
00003388                           476  *-------------------Data Delarations--------------------
00003388                           477  *-------------------------------------------------------
00003388                           478  
00003388= 0D 0A 00                 479  crlf:                dc.b    $0D,$0A,0
0000338B= 2A 2A 2A 2A 2A 2A ...    480  welcome_msg:         dc.b    '************************************************************'
000033C7= 0D 0A                    481                       dc.b    $0D,$0A
000033C9= 41 76 61 6C 6F 6E ...    482                       dc.b    'Avalon: The Legend Lives'
000033E1= 0D 0A                    483                       dc.b    $0D,$0A
000033E3= 2A 2A 2A 2A 2A 2A ...    484                       dc.b    '************************************************************'
0000341F= 0D 0A                    485                       dc.b    $0D,$0A
00003421= 45 6E 74 65 72 20 ...    486                       dc.b    'Enter 1 to Start, Enter 0 to Quit: ',0
00003445= 0D 0A                    487  intro_msg:           dc.b    $0D,$0A
00003447= 59 6F 75 20 61 6E ...    488                       dc.b    'You and your cavalry are given a quest to deliver '
00003479= 0D 0A                    489                       dc.b    $0D,$0A
0000347B= 61 6E 20 61 6E 63 ...    490                       dc.b    'an ancient relic to the Kingdom of Noirheed.'
000034A7= 0D 0A                    491                       dc.b    $0D,$0A
000034A9= 42 65 66 6F 72 65 ...    492                       dc.b    'Before you leave, the King who bestowed you this quest'
000034DF= 0D 0A                    493                       dc.b    $0D,$0A
000034E1= 67 69 76 65 73 20 ...    494                       dc.b    'gives you half the payment upfront -- 5000 gold.'
00003511= 0D 0A                    495                       dc.b    $0D,$0A
00003513= 57 69 74 68 20 74 ...    496                       dc.b    'With this, you must decide how best to spend your gold,'
0000354A= 0D 0A                    497                       dc.b    $0D,$0A
0000354C= 61 6E 64 20 68 6F ...    498                       dc.b    'and how much you would like to keep for yourself.',0
0000357E= 59 6F 75 20 77 61 ...    499  potions_msg:         dc.b    'You walk into a nearby potion shop and decide how many potions you need. '
000035C7= 0D 0A                    500                       dc.b    $0D,$0A
000035C9= 22 45 61 63 68 20 ...    501                       dc.b    '"Each potion costs 100 gold, how many do ye want?":  ',0
000035FF= 45 76 65 6E 20 77 ...    502  potions_error_max    dc.b    'Even with your cavalry team, you would not be able to hold that many potions.'
0000364C= 0D 0A 00                 503                       dc.b    $0D,$0A,0
0000364F= 59 6F 75 20 77 69 ...    504  potions_error_min    dc.b    'You will need potions to go on this journey.'
0000367B= 0D 0A 00                 505                       dc.b    $0D,$0A,0
0000367E= 59 6F 75 20 64 6F ...    506  error_money          dc.b    'You do not have enough money.'
0000369B= 0D 0A 00                 507                       dc.b    $0D,$0A,0
0000369E                           508                       
0000369E= 4E 75 6D 62 65 72 ...    509  potion_msg:          dc.b    'Number of potions : ',0
000036B3                           510  
000036B3= 4E 75 6D 62 65 72 ...    511  weapon_msg:          dc.b    'Number of weapons : ',0
000036C8                           512  
000036C8= 41 6D 6F 75 6E 74 ...    513  gold_msg             dc.b    'Amount of gold: ',0
000036D9                           514  
000036D9= 59 6F 75 20 64 65 ...    515  weapons_msg:         dc.b    'You decide to buy some weapons for you and your cavalry.'
00003711= 0D 0A                    516                       dc.b    $0D,$0A
00003713= 45 61 63 68 20 66 ...    517                       dc.b    'Each fight will use at least 1 weapon and it`s 250 gold per weapon.'
00003756= 0D 0A                    518                       dc.b    $0D,$0A
00003758= 57 69 74 68 20 74 ...    519                       dc.b    'With this knowledge, you decide to buy: ',0 
00003781                           520                   
00003781= 41 73 20 79 6F 75 ...    521  weapons_error_max    dc.b    'As you already have weapons, that would be too many.'
000037B5= 0D 0A 00                 522                       dc.b    $0D,$0A,0
000037B8                           523                       
000037B8= 59 6F 75 20 6E 65 ...    524  weapons_error_min    dc.b    'You need more weapons than you already have.'
000037E4= 0D 0A 00                 525                       dc.b    $0D,$0A,0
000037E7                           526                       
000037E7= 41 64 64 20 47 61 ...    527  gameplay_msg:        dc.b    'Add Gameplay !',0
000037F6= 55 70 64 61 74 65 ...    528  update_msg:          dc.b    'Update Gameplay !',0
00003808= 44 72 61 77 20 53 ...    529  draw_msg:            dc.b    'Draw Screen !',0
00003816= 53 74 72 69 6B 65 ...    530  hit_msg:             dc.b    'Strike!',0
0000381E= 4D 69 73 73 21 00        531  miss_msg:            dc.b    'Miss!',0
00003824= 2E 00                    532  loop_msg:            dc.b    '.',0
00003826= 45 6E 74 65 72 20 ...    533  replay_msg:          dc.b    'Enter 0 to Quit any other number to replay : ',0
00003854= 53 63 6F 72 65 20 ...    534  hud_msg:             dc.b    'Score : ',0
0000385D= 0D 0A 00                 535  empty_msg            dc.b    '',$0D,$0A,0
00003860                           536  
00003860                           537  
00003860                           538  
00003860                           539      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CLEAR_SCREEN        3344
COLLISION           32EA
COLLISION_HIT       32F6
COLLISION_MISS      3304
CRLF                3388
CYAN                FFFF00
DECORATE            3326
DRAW                30D6
DRAW_MSG            3808
EMPTY_MSG           385D
END                 3006
ENDL                3372
ERROR_MONEY         367E
EXIT                0
FEED                10D0
FONT                1090000
GAME                3000
GAMELOOP            3092
GAMEPLAY            32AA
GAMEPLAY_MSG        37E7
GOLD                10CA
GOLD_MSG            36C8
HEALTH              1000
HIT_MSG             3816
HUD                 32C8
HUD_MSG             3854
INPUT               3088
INTRO_MSG           3445
LOOP                3312
LOOP_MSG            3824
LOSE_POINT          8
MAX_POTIONS         14
MAX_WEAPONS         F
MINE_LOC            64
MIN_POTIONS         1
MIN_WEAPONS         1
MISS_MSG            381E
NEXT                3316
OUT                 332E
POTIONS             30F0
POTIONSREMAIN       31C2
POTIONS_ERROR_MAX   35FF
POTIONS_ERROR_MIN   364F
POTIONS_MSG         357E
POTION_COUNT        10CC
POTION_ERROR_MAX    3192
POTION_ERROR_MIN    31A2
POTION_ERROR_MONEY  31B2
POTION_MSG          369E
RED                 FF
REPLAY              3350
REPLAY_MSG          3826
SCORE               10C8
START               10D2
UPDATE              30BC
UPDATE_MSG          37F6
WEAPONS             31DC
WEAPONS_ERROR_MAX   3781
WEAPONS_ERROR_MIN   37B8
WEAPONS_MSG         36D9
WEAPON_COUNT        10CE
WEAPON_ERROR_MAX    3276
WEAPON_ERROR_MIN    3286
WEAPON_ERROR_MONEY  3296
WEAPON_MSG          36B3
WELCOME             300A
WELCOME_MSG         338B
WHITE               FFFFFF
WIN_POINT           5
